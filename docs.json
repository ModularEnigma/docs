{
  "Alerts": {
    "alert/create": {
      "method": "POST",
      "privileged": true,
      "short": "Create alert",
      "description": "Create an alert on Network platforms.",
      "parameters": {
        "alertSlug": {
          "type": "string",
          "info": "Unique Identifier.",
          "optional": false
        },
        "body": {
          "type": "string",
          "info": "The text or message you would like to send in the format you specified.",
          "optional": false
        },
        "motd": {
          "type": "boolean",
          "info": "Is the alert meant for the message of the day?",
          "optional": false
        },
        "tips": {
          "type": "boolean",
          "info": "Is this an alert to rotate in game?",
          "optional": false
        },
        "web": {
          "type": "boolean",
          "info": "Is this a website banner alert to display globally?",
          "optional": false
        },
        "link": {
          "type": "string",
          "info": "If tips or web is selected, when clicked, where should it redirect the user?",
          "optional": true
        },
        "motdFormat": {
          "type": "string",
          "info": "If motd is selected, what is the & colour specific format?",
          "optional": true
        }
      }
    },
    "alert/edit": {
      "method": "POST",
      "privileged": true,
      "short": "Edit alert",
      "description": "Edit an existing alert on Network platforms.",
      "parameters": {
        "alertSlug": {
          "type": "string",
          "info": "Unique Identifier.",
          "optional": false
        },
        "body": {
          "type": "string",
          "info": "The text or message you would like to send in the format you specified.",
          "optional": false
        },
        "motd": {
          "type": "boolean",
          "info": "Is the alert meant for the message of the day?",
          "optional": false
        },
        "tips": {
          "type": "boolean",
          "info": "Is this an alert to rotate in game?",
          "optional": false
        },
        "web": {
          "type": "boolean",
          "info": "Is this a website banner alert to display globally?",
          "optional": false
        },
        "link": {
          "type": "string",
          "info": "If tips or web is selected, when clicked, where should it redirect the user?",
          "optional": true
        },
        "motdFormat": {
          "type": "string",
          "info": "If motd is selected, what is the & colour specific format?",
          "optional": true
        }
      }
    },
    "alert/delete": {
      "method": "POST",
      "privileged": true,
      "short": "Delete alert",
      "description": "Delete an existing alert on Network platforms.",
      "parameters": {
        "alertSlug": {
          "type": "string",
          "info": "Unique Identifier.",
          "optional": false
        }
      }
    }
  },
  "Anticheat": {
    "anticheat/flag": {
      "method": "POST",
      "privileged": true,
      "short": "Flag user",
      "description": "Flag a user via the anticheat and send to staff.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        },
        "type": {
          "type": "string",
          "info": "The type of hack that the player has been flagged for.",
          "optional": false
        }
      }
    }
  },
  "Appeals": {
    "appeal/create": {
      "method": "POST",
      "privileged": true,
      "short": "Create appeal",
      "description": "Create an appeal to remove a punishment.",
      "parameters": {
        "punishmentId": {
          "type": "integer",
          "info": "The punishment ID the user is appealing.",
          "optional": false
        }
      }
    },
    "appeal/$punishmentId/get": {
      "method": "GET",
      "privileged": true,
      "short": "Get appeal comments",
      "description": "Get all comments on the selected appeal.",
      "parameters": {
        "punishmentId": {
          "type": "integer",
          "info": "The punishment ID to view all comments on.",
          "optional": false
        }
      }
    },
    "appeal/comment": {
      "method": "POST",
      "privileged": true,
      "short": "Comment on appeal",
      "description": "Submit a comment, or if Staff, a staff note onto an existing appeal.",
      "parameters": {
        "punishmentId": {
          "type": "integer",
          "info": "The punishment ID to add a comments to.",
          "optional": false
        },
        "staffId": {
          "type": "integer",
          "info": "The id of the Staff member providing comment.",
          "optional": true
        },
        "content": {
          "type": "string",
          "info": "The content of the appeal comment.",
          "optional": false
        }
      }
    },
    "appeal/accept": {
      "method": "POST",
      "privileged": true,
      "short": "Accept appeal",
      "description": "Accept and unpunish the user from an existing punishment.",
      "parameters": {
        "punishmentId": {
          "type": "integer",
          "info": "The punishment ID to accept.",
          "optional": false
        },
        "staffId": {
          "type": "integer",
          "info": "The id of the Staff member providing comment.",
          "optional": false
        },
        "content": {
          "type": "string",
          "info": "The content of the appeal comment.",
          "optional": true
        }
      }
    },
    "appeal/deny": {
      "method": "POST",
      "privileged": true,
      "short": "Deny appeal",
      "description": "Deny and close existing appeal of an existing punishment.",
      "parameters": {
        "punishmentId": {
          "type": "integer",
          "info": "The punishment ID to deny.",
          "optional": false
        },
        "staffId": {
          "type": "integer",
          "info": "The id of the Staff member providing comment.",
          "optional": false
        },
        "content": {
          "type": "string",
          "info": "The content of the appeal comment.",
          "optional": true
        }
      }
    },
    "appeal/escalate": {
      "method": "POST",
      "privileged": true,
      "short": "Escalate appeal",
      "description": "Escalate an existing punishment to Senior Staff.",
      "parameters": {
        "punishmentId": {
          "type": "integer",
          "info": "The punishment ID to escalate.",
          "optional": false
        },
        "staffId": {
          "type": "integer",
          "info": "The id of the Staff member providing comment.",
          "optional": false
        },
        "content": {
          "type": "string",
          "info": "The content of the appeal comment.",
          "optional": true
        }
      }
    },
    "appeal/deescalate": {
      "method": "POST",
      "privileged": true,
      "short": "De-escalate appeal",
      "description": "De-escalate an existing punishment to Staff.",
      "parameters": {
        "punishmentId": {
          "type": "integer",
          "info": "The punishment ID to escalate.",
          "optional": false
        },
        "staffId": {
          "type": "integer",
          "info": "The id of the Staff member providing comment.",
          "optional": false
        },
        "content": {
          "type": "string",
          "info": "The content of the appeal comment.",
          "optional": true
        }
      }
    }
  },
  "Applications": {
    "application/get": {
      "method": "GET",
      "privileged": true,
      "short": "Get forms",
      "description": "Get a list of all the application forms."
    },
    "application/create": {
      "method": "POST",
      "privileged": true,
      "short": "Create form",
      "description": "Create an application for users to apply for.",
      "parameters": {
        "displayName": {
          "type": "string",
          "info": "The display name for the application.",
          "optional": false
        },
        "description": {
          "type": "string",
          "info": "A short blurb of the application.",
          "optional": false
        },
        "displayIcon": {
          "type": "string",
          "info": "The icon to display from FontAwesome.",
          "optional": false
        },
        "requirementsMarkdown": {
          "type": "string",
          "info": "A link to a markdown file that renders the requirements for the role",
          "optional": false
        },
        "redirectURL": {
          "type": "string",
          "info": "The Google Form URL to redirect to",
          "optional": false
        },
        "position": {
          "type": "integer",
          "info": "Which position should this application sit on the page",
          "optional": false
        }
      }
    },
    "application/edit": {
      "method": "POST",
      "privileged": true,
      "short": "Edit form",
      "description": "Edit an existing application for users to apply for.",
      "parameters": {
        "applicationId": {
          "type": "integer",
          "info": "The id of the application to edit.",
          "optional": false
        },
        "displayName": {
          "type": "string",
          "info": "The display name for the application.",
          "optional": false
        },
        "description": {
          "type": "string",
          "info": "A short blurb of the application.",
          "optional": false
        },
        "displayIcon": {
          "type": "string",
          "info": "The icon to display from FontAwesome.",
          "optional": false
        },
        "requirementsMarkdown": {
          "type": "string",
          "info": "A link to a markdown file that renders the requirements for the role",
          "optional": false
        },
        "redirectURL": {
          "type": "string",
          "info": "The Google Form URL to redirect to",
          "optional": false
        },
        "position": {
          "type": "integer",
          "info": "Which position should this application sit on the page",
          "optional": false
        }
      }
    },
    "application/delete": {
      "method": "POST",
      "privileged": true,
      "short": "Delete form",
      "description": "Delete an existing application.",
      "parameters": {
        "applicationId": {
          "type": "integer",
          "info": "The id of the application to delete.",
          "optional": false
        }
      }
    }
  },
  "Community Creations": {
    "communitycreation/get": {
      "method": "GET",
      "privileged": true,
      "short": "Get submissions",
      "description": "Get all community creation submissions."
    },
    "communitycreation/submit": {
      "method": "POST",
      "privileged": true,
      "short": "Create submission",
      "description": "Submit content to the community creation page.",
      "parameters": {
        "creatorId": {
          "type": "integer",
          "info": "The user ID for the submitter.",
          "optional": false
        },
        "creationName": {
          "type": "string",
          "info": "A short name of the creation.",
          "optional": true
        },
        "creationDescription": {
          "type": "string",
          "info": "The description for the creation.",
          "optional": true
        },
        "creationLink": {
          "type": "string",
          "info": "The link to the raw image.",
          "optional": false
        }
      }
    },
    "communitycreation/approve": {
      "method": "POST",
      "privileged": true,
      "short": "Approve submission",
      "description": "Approve a community creation submission.",
      "parameters": {
        "id": {
          "type": "integer",
          "info": "The ID of the creation submission to approve.",
          "optional": false
        }
      }
    },
    "communitycreation/deny": {
      "method": "POST",
      "privileged": true,
      "short": "Deny submission",
      "description": "Deny a community creation submission.",
      "parameters": {
        "id": {
          "type": "integer",
          "info": "The ID of the creation submission to deny.",
          "optional": false
        }
      }
    },
    "communitycreation/delete": {
      "method": "POST",
      "privileged": true,
      "short": "Delete creation",
      "description": "Delete a submitted community creation.",
      "parameters": {
        "id": {
          "type": "integer",
          "info": "The ID of the creation to delete.",
          "optional": false
        }
      }
    }
  },
  "Discord": {
    "discord/switch": {
      "method": "POST",
      "privileged": true,
      "short": "Log server switch",
      "description": "Log a message to a Discord channel when user switches Server.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        },
        "server": {
          "type": "string",
          "info": "Server display name.",
          "optional": false
        }
      }
    },
    "discord/chat": {
      "method": "POST",
      "privileged": true,
      "short": "Log chat",
      "description": "Log a message to a Discord channel when user send a public chat message.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        },
        "server": {
          "type": "string",
          "info": "Server display name.",
          "optional": false
        },
        "content": {
          "type": "string",
          "info": "Chat content.",
          "optional": false
        }
      }
    },
    "discord/join": {
      "method": "POST",
      "privileged": true,
      "short": "Log user joining",
      "description": "Log a message to a Discord channel when user joins the Network.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        }
      }
    },
    "discord/leave": {
      "method": "POST",
      "privileged": true,
      "short": "Log user leaving",
      "description": "Log a message to a Discord channel when user leaves the Network.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        }
      }
    },
    "discord/directMessage": {
      "method": "POST",
      "privileged": true,
      "short": "Log direct message",
      "description": "Log a message to a Discord channel when user sends a direct message to another user.",
      "parameters": {
        "senderUsername": {
          "type": "string",
          "info": "Sender's IGN.",
          "optional": false
        },
        "recipientUsername": {
          "type": "string",
          "info": "Recipient's IGN.",
          "optional": false
        },
        "server": {
          "type": "string",
          "info": "Server display name.",
          "optional": false
        },
        "content": {
          "type": "string",
          "info": "Chat content.",
          "optional": false
        }
      }
    }
  },
  "Events": {
    "event/get": {
      "method": "GET",
      "privileged": true,
      "short": "Get events",
      "description": "Get a list of all current events."
    },
    "event/create": {
      "method": "POST",
      "privileged": true,
      "short": "Create event",
      "description": "Create an event to be published.",
      "parameters": {
        "name": {
          "type": "string",
          "info": "The display name for the event.",
          "optional": false
        },
        "icon": {
          "type": "string",
          "info": "A link to an image that will be the icon to showcase the event.",
          "optional": false
        },
        "eventDateTime": {
          "type": "string",
          "info": "The date and time for the event.",
          "optional": false
        },
        "hostingServer": {
          "type": "string",
          "info": "The id of the server where the event will be hosted.",
          "optional": false
        },
        "information": {
          "type": "string",
          "info": "Information about the event.",
          "optional": false
        }
      }
    },
    "event/edit": {
      "method": "POST",
      "privileged": true,
      "short": "Edit event",
      "description": "Edit an existing event, published or not.",
      "parameters": {
        "name": {
          "type": "string",
          "info": "The display name for the event.",
          "optional": false
        },
        "icon": {
          "type": "string",
          "info": "A link to an image that will be the icon to showcase the event.",
          "optional": false
        },
        "eventDateTime": {
          "type": "string",
          "info": "The date and time for the event.",
          "optional": false
        },
        "hostingServer": {
          "type": "string",
          "info": "The id of the server where the event will be hosted.",
          "optional": false
        },
        "information": {
          "type": "string",
          "info": "Information about the event.",
          "optional": false
        }
      }
    },
    "event/delete": {
      "method": "POST",
      "privileged": true,
      "short": "Delete event",
      "description": "Delete an existing event.",
      "parameters": {
        "eventId": {
          "type": "integer",
          "info": "The ID of the event to delete",
          "optional": false
        }
      }
    },
    "event/publish": {
      "method": "POST",
      "privileged": true,
      "short": "Publish event",
      "description": "Publish an event.",
      "parameters": {
        "eventId": {
          "type": "integer",
          "info": "The ID of the event to publish",
          "optional": false
        }
      }
    }
  },
  "Friends": {
    "friend/request": {
      "method": "POST",
      "privileged": true,
      "short": "Send friend request",
      "description": "Send a user a friend request.",
      "parameters": {
        "requestee": {
          "type": "string",
          "info": "The user that has requested to be friends.",
          "optional": false
        },
        "requestedUser": {
          "type": "string",
          "info": "The user that the requestee has requested to be friends with.",
          "optional": false
        }
      }
    },
    "friend/accept": {
      "method": "POST",
      "privileged": true,
      "short": "Accept friend request",
      "description": "Accept the sent friend request.",
      "parameters": {
        "requestee": {
          "type": "string",
          "info": "The user that has requested to be friends.",
          "optional": false
        },
        "requestedUser": {
          "type": "string",
          "info": "The user that the requestee has requested to be friends with.",
          "optional": false
        }
      }
    },
    "friend/deny": {
      "method": "POST",
      "privileged": true,
      "short": "Deny friend request",
      "description": "Deny the sent friend request.",
      "parameters": {
        "requestee": {
          "type": "string",
          "info": "The user that has requested to be friends.",
          "optional": false
        },
        "requestedUser": {
          "type": "string",
          "info": "The user that the requestee has requested to be friends with.",
          "optional": false
        }
      }
    },
    "friend/remove": {
      "method": "POST",
      "privileged": true,
      "short": "Remove friend",
      "description": "Remove an existing friend from your friends list.",
      "parameters": {
        "requestee": {
          "type": "string",
          "info": "The user that has requested to be friends.",
          "optional": false
        },
        "requestedUser": {
          "type": "string",
          "info": "The user that the requestee wants to remove.",
          "optional": false
        }
      }
    },
    "friend/block": {
      "method": "POST",
      "privileged": true,
      "short": "Block user",
      "description": "Block and remove a friend from your friends list or block a user.",
      "parameters": {
        "requestee": {
          "type": "string",
          "info": "The user that has requested to be friends.",
          "optional": false
        },
        "requestedUser": {
          "type": "string",
          "info": "The user that the requestee wants to block.",
          "optional": false
        }
      }
    }
  },
  "Knowledge Base": {
    "knowledgebase/section/create": {
      "method": "POST",
      "privileged": true,
      "short": "Create section",
      "description": "Create a new knowledgebase section.",
      "parameters": {
        "sectionSlug": {
          "type": "string",
          "info": "The unique identifier for the section.",
          "optional": false
        },
        "sectionName": {
          "type": "string",
          "info": "The display name for the section.",
          "optional": false
        },
        "description": {
          "type": "string",
          "info": "A description to summarise the section",
          "optional": false
        },
        "sectionIcon": {
          "type": "string",
          "info": "The Font Awesome icon to use on the section",
          "optional": false
        },
        "position": {
          "type": "integer",
          "info": "Where on the page it should it be displayed",
          "optional": false
        }
      }
    },
    "knowledgebase/section/update": {
      "method": "POST",
      "privileged": true,
      "short": "Update section",
      "description": "Update an existing section for the knowledgebase.",
      "parameters": {
        "sectionSlug": {
          "type": "string",
          "info": "The unique identifier for the section.",
          "optional": false
        },
        "sectionName": {
          "type": "string",
          "info": "The display name for the section.",
          "optional": false
        },
        "description": {
          "type": "string",
          "info": "A description to summarise the section",
          "optional": false
        },
        "sectionIcon": {
          "type": "string",
          "info": "The Font Awesome icon to use on the section",
          "optional": false
        },
        "position": {
          "type": "integer",
          "info": "Where on the page it should it be displayed",
          "optional": false
        }
      }
    },
    "knowledgebase/section/delete": {
      "method": "POST",
      "privileged": true,
      "short": "Delete section",
      "description": "Delete an existing section from the knowledgebase.",
      "parameters": {
        "sectionSlug": {
          "type": "string",
          "info": "The unique identifier for the section.",
          "optional": false
        }
      }
    },
    "knowledgebase/section/get": {
      "method": "GET",
      "privileged": true,
      "short": "Get sections",
      "description": "Get a list of all the knowledgebase sections."
    },
    "knowledgebase/article/get": {
      "method": "GET",
      "privileged": true,
      "short": "Get articles",
      "description": "Get a list of all the knowledgebase articles or get a single article.",
      "parameters": {
        "articleSlug": {
          "type": "string",
          "info": "The unique identifier for the article to get.",
          "optional": true
        }
      }
    },
    "knowledgebase/article/create": {
      "method": "POST",
      "privileged": true,
      "short": "Create article",
      "description": "Create a new knowledgebase article.",
      "parameters": {
        "articleSlug": {
          "type": "string",
          "info": "The unique identifier for the article.",
          "optional": false
        },
        "articleName": {
          "type": "string",
          "info": "The display name for the article.",
          "optional": false
        },
        "articleLink": {
          "type": "string",
          "info": "The link to the markdown that displays the article.",
          "optional": false
        },
        "section": {
          "type": "string",
          "info": "Which section should the article belong to.",
          "optional": false
        },
        "position": {
          "type": "integer",
          "info": "Where on the page it should it be displayed.",
          "optional": false
        }
      }
    },
    "knowledgebase/article/update": {
      "method": "POST",
      "privileged": true,
      "short": "Update article",
      "description": "Update an existing article for the knowledgebase.",
      "parameters": {
        "articleSlug": {
          "type": "string",
          "info": "The unique identifier for the article.",
          "optional": false
        },
        "articleName": {
          "type": "string",
          "info": "The display name for the article.",
          "optional": false
        },
        "articleLink": {
          "type": "string",
          "info": "The link to the markdown that displays the article.",
          "optional": false
        },
        "section": {
          "type": "string",
          "info": "Which section should the article belong to.",
          "optional": false
        },
        "position": {
          "type": "integer",
          "info": "Where on the page it should it be displayed.",
          "optional": false
        }
      }
    },
    "knowledgebase/article/delete": {
      "method": "POST",
      "privileged": true,
      "short": "Delete article",
      "description": "Delete an existing article from the knowledgebase.",
      "parameters": {
        "articleSlug": {
          "type": "string",
          "info": "The unique identifier for the article.",
          "optional": false
        }
      }
    }
  },
  "Punishments": {
    "punishment/issue": {
      "method": "POST",
      "privileged": true,
      "short": "Issue a punishment",
      "description": "Issues a punishment to a user.",
      "parameters": {
        "playerUsername": {
          "type": "string",
          "info": "Username of the punished user.",
          "optional": false
        },
        "staffUsername": {
          "type": "string",
          "info": "Username of the punishing Staff Member.",
          "optional": false
        },
        "platform": {
          "type": "string",
          "info": "Specify the platform to be punished from (server/discord).",
          "optional": false
        },
        "type": {
          "type": "string",
          "info": "Type of punishment to issue (warn/kick/tempBan/ban/ipBan).",
          "optional": false
        },
        "length": {
          "type": "string",
          "info": "The length of the punishment (if applicable).",
          "optional": false
        },
        "reason": {
          "type": "string",
          "info": "Reason for the punishement.",
          "optional": false
        }
      }
    },
    "punishment/delete": {
      "method": "POST",
      "privileged": true,
      "short": "Delete a punishment",
      "description": "Delete an existing punishment.",
      "parameters": {
        "punishmentId": {
          "type": "integer",
          "info": "The ID of the punishment to delete.",
          "optional": false
        }
      }
    },
    "punishment/user": {
      "method": "GET",
      "privileged": true,
      "short": "Get a user's punishments",
      "description": "Get a list of all the punishments for a user.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN. TODO: Needs to be clear that this parameter comes from a query",
          "optional": false
        }
      }
    },
    "punishment/latest": {
      "method": "GET",
      "privileged": true,
      "short": "Get the latest punishments",
      "description": "Get the latest punishments issued."
    }
  },
  "Ranks": {
    "rank/get": {
      "method": "GET",
      "privileged": false,
      "short": "Get user's ranks",
      "description": "Returns users and their ranks. Can return a matching user's rank or a users that have a specific rank.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN. Include results with a matching username.",
          "optional": true
        },
        "rank": {
          "type": "string",
          "info": "Rank Display Name. Only include results with a matching rank.",
          "optional": true
        }
      }
    },
    "rank/list": {
      "method": "GET",
      "privileged": true,
      "short": "Get a list of all current ranks",
      "description": "Get a list of all current ranks."
    },
    "rank/create": {
      "method": "POST",
      "privileged": true,
      "short": "Create a rank",
      "description": "Create a rank.",
      "parameters": {
        "rankSlug": {
          "type": "string",
          "info": "Unique Identifier.",
          "optional": false
        },
        "displayName": {
          "type": "string",
          "info": "Rank's Display Name.",
          "optional": false
        },
        "priority": {
          "type": "integer",
          "info": "Priority of rank in hierarchy.",
          "optional": false
        },
        "rankBadgeColour": {
          "type": "string",
          "info": "Colour of the rank text in-game and background of badge on the website.",
          "optional": false
        },
        "rankTextColour": {
          "type": "string",
          "info": "Colour of the text on the Website.",
          "optional": false
        },
        "discordRoleId": {
          "type": "integer",
          "info": "ID of the role on Discord to assign user to.",
          "optional": false
        },
        "isStaff": {
          "type": "boolean",
          "info": "Boolean for if the rank is Staff, to appear on Staff page.",
          "optional": false
        },
        "isDonator": {
          "type": "boolean",
          "info": "Boolean for if the rank is a donation rank to appear on ranks page.",
          "optional": false
        }
      }
    },
    "rank/edit": {
      "method": "POST",
      "privileged": true,
      "short": "Edit a rank",
      "description": "Edit an existing rank.",
      "parameters": {
        "rankSlug": {
          "type": "string",
          "info": "Unique Identifier.",
          "optional": false
        },
        "displayName": {
          "type": "string",
          "info": "Rank's Display Name.",
          "optional": false
        },
        "priority": {
          "type": "integer",
          "info": "Priority of rank in hierarchy.",
          "optional": false
        },
        "rankBadgeColour": {
          "type": "string",
          "info": "Colour of the rank text in-game and background of badge on the website.",
          "optional": false
        },
        "rankTextColour": {
          "type": "string",
          "info": "Colour of the text on the Website.",
          "optional": false
        },
        "discordRoleId": {
          "type": "integer",
          "info": "ID of the role on Discord to assign user to.",
          "optional": false
        },
        "isStaff": {
          "type": "boolean",
          "info": "Boolean for if the rank is Staff, to appear on Staff page.",
          "optional": false
        },
        "isDonator": {
          "type": "boolean",
          "info": "Boolean for if the rank is a donation rank to appear on ranks page.",
          "optional": false
        }
      }
    },
    "rank/delete": {
      "method": "POST",
      "privileged": true,
      "short": "Delete a rank",
      "description": "Delete an existing rank.",
      "parameters": {
        "rankSlug": {
          "type": "string",
          "info": "Unique Identifier.",
          "optional": false
        }
      }
    },
    "rank/assign": {
      "method": "POST",
      "privileged": true,
      "short": "Assign user a rank",
      "description": "Assign a rank to an existing user.",
      "parameters": {
        "rankSlug": {
          "type": "string",
          "info": "Unique Identifier.",
          "optional": false
        },
        "username": {
          "type": "string",
          "info": "User IGN to assign to.",
          "optional": false
        }
      }
    },
    "rank/unassign": {
      "method": "POST",
      "privileged": true,
      "short": "Unassign user a rank",
      "description": "Unassign a rank from an existing user.",
      "parameters": {
        "rankSlug": {
          "type": "string",
          "info": "Unique Identifier.",
          "optional": false
        },
        "username": {
          "type": "string",
          "info": "User IGN to unassign from.",
          "optional": false
        }
      }
    }
  },
  "User Reports": {
    "report/get": {
      "method": "GET",
      "privileged": true,
      "short": "Get all reports",
      "description": "Get a list of all current Network reports."
    },
    "report/get/$username": {
      "method": "GET",
      "privileged": true,
      "short": "Get all reports from user",
      "description": "Get a list of all current Network reports from requested user.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        }
      }
    },
    "report/create": {
      "method": "POST",
      "privileged": true,
      "short": "Report a player",
      "description": "Create a player report to send to Staff to investigate.",
      "parameters": {
        "reportedUser": {
          "type": "string",
          "info": "User IGN that is being reported.",
          "optional": false
        },
        "reporterUser": {
          "type": "string",
          "info": "User IGN that reported.",
          "optional": false
        },
        "reason": {
          "type": "string",
          "info": "Reason for the report.",
          "optional": false
        },
        "evidence": {
          "type": "string",
          "info": "For the user to link any video evidence or screenshots.",
          "optional": true
        },
        "server": {
          "type": "string",
          "info": "Server that user is being reported from.",
          "optional": false
        }
      }
    },
    "report/close": {
      "method": "POST",
      "privileged": true,
      "short": "Close a report",
      "description": "Close an existing report on a player.",
      "parameters": {
        "reportId": {
          "type": "integer",
          "info": "The ID for the player report.",
          "optional": false
        }
      }
    }
  },
  "Minecraft Servers": {
    "server/get": {
      "method": "GET",
      "privileged": false,
      "short": "Get server list",
      "description": "Get a list of all Servers."
    },
    "server/create": {
      "method": "POST",
      "privileged": true,
      "short": "Create a server",
      "description": "Create a server.",
      "parameters": {
        "name": {
          "type": "string",
          "info": "Display name for the server.",
          "optional": false
        },
        "ipAddress": {
          "type": "string",
          "info": "IP Address of the server.",
          "optional": false
        },
        "prot": {
          "type": "integer",
          "info": "Port for the server.",
          "optional": false
        },
        "visible": {
          "type": "string",
          "info": "Whether it should be displayed on the /play page",
          "optional": false
        },
        "position": {
          "type": "integer",
          "info": "The display position the server should be on for the /play page",
          "optional": false
        }
      }
    },
    "server/edit": {
      "method": "POST",
      "privileged": true,
      "short": "Edit a server",
      "description": "Edit an existing server.",
      "parameters": {
        "serverId": {
          "type": "integer",
          "info": "The ID of the server.",
          "optional": false
        },
        "name": {
          "type": "string",
          "info": "Display name for the server.",
          "optional": false
        },
        "ipAddress": {
          "type": "string",
          "info": "IP Address of the server.",
          "optional": false
        },
        "prot": {
          "type": "integer",
          "info": "Port for the server.",
          "optional": false
        },
        "visible": {
          "type": "string",
          "info": "Whether it should be displayed on the /play page",
          "optional": false
        },
        "position": {
          "type": "integer",
          "info": "The display position the server should be on for the /play page",
          "optional": false
        }
      }
    },
    "server/delete": {
      "method": "POST",
      "privileged": true,
      "short": "Delete a server",
      "description": "Delete an existing server.",
      "parameters": {
        "serverId": {
          "type": "integer",
          "info": "The ID of the server to delete.",
          "optional": false
        }
      }
    }
  },
  "Sessions": {
    "session/create": {
      "method": "POST",
      "privileged": true,
      "short": "Create a session",
      "description": "Create a session for user on login.",
      "parameters": {
        "uuid": {
          "type": "string",
          "info": "The UUID for the user.",
          "optional": false
        },
        "ipAddress": {
          "type": "string",
          "info": "The IP address of the user.",
          "optional": false
        },
        "server": {
          "type": "string",
          "info": "The server the user has logged into.",
          "optional": false
        }
      }
    },
    "session/destroy": {
      "method": "POST",
      "privileged": true,
      "short": "Destroy a session",
      "description": "Update session record to indicate end of session and logout.",
      "parameters": {
        "uuid": {
          "type": "string",
          "info": "The UUID for the Minecraft user.",
          "optional": false
        }
      }
    },
    "session/switch": {
      "method": "POST",
      "privileged": true,
      "short": "Update session for server switch",
      "description": "Update session record to indicate change of server.",
      "parameters": {
        "uuid": {
          "type": "string",
          "info": "The UUID for the Minecraft user.",
          "optional": false
        }
      }
    }
  },
  "Shopping District Directory": {
    "shop/get": {
      "method": "GET",
      "privileged": false,
      "short": "Get all shops",
      "description": "List all shops in the district."
    },
    "shop/create": {
      "method": "POST",
      "privileged": true,
      "short": "Create a shop",
      "description": "Create a shop listing in the directory.",
      "parameters": {
        "shopName": {
          "type": "string",
          "info": "The display name for the shop.",
          "optional": false
        },
        "shopDescription": {
          "type": "string",
          "info": "A description of the shop.",
          "optional": false
        },
        "shopCreatorId": {
          "type": "integer",
          "info": "The ID of the user that has created the listing.",
          "optional": false
        }
      }
    },
    "shop/edit": {
      "method": "POST",
      "privileged": true,
      "short": "Edit a shop",
      "description": "Edit an existing shop listing in the directory.",
      "parameters": {
        "shopId": {
          "type": "string",
          "info": "The display name for the shop.",
          "optional": false
        },
        "shopName": {
          "type": "string",
          "info": "The display name for the shop.",
          "optional": false
        },
        "shopDescription": {
          "type": "string",
          "info": "A description of the shop.",
          "optional": false
        },
        "shopCreatorId": {
          "type": "integer",
          "info": "The ID of the user that has created the listing.",
          "optional": false
        }
      }
    },
    "shop/delete": {
      "method": "POST",
      "privileged": true,
      "short": "Delete a shop",
      "description": "Delete an existing shop listing in the directory.",
      "parameters": {
        "shopId": {
          "type": "integer",
          "info": "The ID of the shop to delete.",
          "optional": false
        }
      }
    },
    "shop/$shopId/create/item": {
      "method": "POST",
      "privileged": true,
      "short": "Add an item to a shop",
      "description": "Create an item in a shop listing in the directory.",
      "parameters": {
        "shopId": {
          "type": "integer",
          "info": "The ID of the shop.",
          "optional": false
        },
        "shopItem": {
          "type": "string",
          "info": "The Minecraft item name of the shop item.",
          "optional": false
        },
        "shopPrice": {
          "type": "integer",
          "info": "The price for the item.",
          "optional": false
        },
        "shopBuyQuantity": {
          "type": "integer",
          "info": "The quantity of the item you buy with the price.",
          "optional": false
        }
      }
    },
    "shop/$shopId/edit/item": {
      "method": "POST",
      "privileged": true,
      "short": "Edit an item in a shop",
      "description": "Edit an item in the shop listing in the directory.",
      "parameters": {
        "shopId": {
          "type": "integer",
          "info": "The ID of the shop containing the item.",
          "optional": false
        },
        "shopItemId": {
          "type": "integer",
          "info": "The ID of the item to edit.",
          "optional": false
        },
        "shopItem": {
          "type": "string",
          "info": "The Minecraft item name of the shop item.",
          "optional": false
        },
        "shopPrice": {
          "type": "integer",
          "info": "The price for the item.",
          "optional": false
        },
        "shopBuyQuantity": {
          "type": "integer",
          "info": "The quantity of the item you buy with the price.",
          "optional": false
        }
      }
    },
    "shop/$shopId/delete/item": {
      "method": "POST",
      "privileged": true,
      "short": "Edit an item in a shop",
      "description": "Edit an item in the shop listing in the directory.",
      "parameters": {
        "shopId": {
          "type": "integer",
          "info": "The ID of the shop containing the item.",
          "optional": false
        },
        "shopItemId": {
          "type": "integer",
          "info": "The ID of the item to delete.",
          "optional": false
        }
      }
    }
  },
  "Users": {
    "user/create": {
      "method": "POST",
      "privileged": true,
      "short": "Create a new user",
      "description": "Create a new user in database when joined for the first time.",
      "parameters": {
        "uuid": {
          "type": "string",
          "info": "The UUID for the Minecraft user.",
          "optional": false
        },
        "username": {
          "type": "string",
          "info": "The username for the user.",
          "optional": false
        }
      }
    },
    "user/profile/$username/about/coverArt": {
      "method": "POST",
      "privileged": true,
      "short": "Update user's cover art",
      "description": "Update a user's profile banner with requested cover art.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        },
        "coverArtId": {
          "type": "integer",
          "info": "Cover art id. TODO: What does this mean?",
          "optional": false
        }
      }
    },
    "user/profile/$username/about/update": {
      "method": "POST",
      "privileged": true,
      "short": "Update user's about page",
      "description": "Update a user's profile about page information.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        }
      }
    },
    "user/profile/$username/authenticate/twitter": {
      "method": "POST",
      "privileged": true,
      "short": "Link with Twitter",
      "description": "Link user's Twitter account to profile.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        }
      }
    },
    "user/profile/$username/authenticate/twitch": {
      "method": "POST",
      "privileged": true,
      "short": "Link with Twitch",
      "description": "Link user's Twitch account to profile.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        }
      }
    },
    "user/profile/$username/authenticate/youtube": {
      "method": "POST",
      "privileged": true,
      "short": "Link with Youtube",
      "description": "Link user's Youtube account to profile.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        }
      }
    },
    "user/profile/$username/authenticate/instagram": {
      "method": "POST",
      "privileged": true,
      "short": "Link with Instagram",
      "description": "Link user's Instagram account to profile.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        }
      }
    },
    "user/profile/$username/authenticate/steam": {
      "method": "POST",
      "privileged": true,
      "short": "Link with Steam",
      "description": "Link user's Steam account to profile.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        }
      }
    },
    "user/profile/$username/authenticate/github": {
      "method": "POST",
      "privileged": true,
      "short": "Link with GitHub",
      "description": "Link user's GitHub account to profile.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        }
      }
    },
    "user/profile/$username/authenticate/spotify": {
      "method": "POST",
      "privileged": true,
      "short": "Link with Spotify",
      "description": "Link user's Spotify account to profile.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        }
      }
    },
    "user/profile/$username/authenticate/discord": {
      "method": "POST",
      "privileged": true,
      "short": "Link with Discord",
      "description": "Link user's Discord account to profile.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        }
      }
    },
    "user/alert/create": {
      "method": "POST",
      "privileged": true,
      "short": "Create an alert for a user",
      "description": "Create an alert for the user to be notified.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        },
        "body": {
          "type": "string",
          "info": "The text or message you would like to notify.",
          "optional": false
        },
        "link": {
          "type": "string",
          "info": "Where should it direct the user to.",
          "optional": false
        }
      }
    },
    "user/alert/delete": {
      "method": "POST",
      "privileged": true,
      "short": "Delete an alert for a user",
      "description": "Delete an alert for the user that has marked as read.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        }
      }
    }
  },
  "Voting": {
    "vote/cast": {
      "method": "POST",
      "privileged": true,
      "short": "Cast a vote",
      "description": "Process a vote from Votifier.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        },
        "dateTime": {
          "type": "string",
          "info": "The date and time for the vote.",
          "optional": false
        },
        "service": {
          "type": "string",
          "info": "The website that the user cast the vote on.",
          "optional": false
        }
      }
    },
    "vote/get": {
      "method": "GET",
      "privileged": true,
      "short": "Get monthly votes",
      "description": "List all current votes for the month so far."
    }
  },
  "Website": {
    "web/login": {
      "method": "POST",
      "privileged": true,
      "short": "Website user login",
      "description": "Log a user into the website and initiate their session.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN (TODO: or email?) of the user to login.",
          "optional": false
        },
        "email": {
          "type": "string",
          "info": "Email of the requested user.",
          "optional": false
        },
        "password": {
          "type": "string",
          "info": "Password that user has inserted.",
          "optional": false
        }
      }
    },
    "web/register/create": {
      "method": "POST",
      "privileged": true,
      "short": "Register a new user",
      "description": "Create a new registration for a user.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        },
        "email": {
          "type": "string",
          "info": "Email of the requested user.",
          "optional": false
        },
        "password": {
          "type": "string",
          "info": "Password that user has inserted.",
          "optional": false
        }
      }
    },
    "web/register/verify": {
      "method": "POST",
      "privileged": true,
      "short": "Verify a registration",
      "description": "Verify a new registration for a user.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        },
        "verificationToken": {
          "type": "string",
          "info": "Token of the registering user, to be obtained via email.",
          "optional": false
        }
      }
    },
    "web/forgot": {
      "method": "POST",
      "privileged": true,
      "short": "User forgot their password",
      "description": "Execute a forgot password for the user.",
      "parameters": {
        "username": {
          "type": "string",
          "info": "User IGN.",
          "optional": false
        }
      }
    }
  }
}